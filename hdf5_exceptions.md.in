---
project: hdf5_exceptions
summary: HDF5 exception types for fortran_exceptions
author: John Haiducek
src_dir: ${PROJ_DIR}
output_dir: ${DOC_DIR}
exclude_dir: ${FORD_PROJECT_EXCLUDE_DIRS}
exclude: ${FORD_PROJECT_EXCLUDE_FILES}
preprocessor: {!.PREPROCESSOR!}
include: ${FORD_PROJECT_INCLUDES}
extra_mods: exceptions:file://${fortran_exceptions_DOCDIR}/index.html
extra_mods: hdf5:https://support.hdfgroup.org/HDF5/doc/fortran/index.html
---

hdf5_exceptions provides an [[hdf5_exception]] type for programs using the [fortran_exceptions](file://${fortran_exceptions_DOCDIR}/index.html) library for exception handling. An [[hdf5_exception]] can be thrown in the event of an HDF5 error, providing additional information to the calling function or to the user about the error that occurred.

## Compiling

hdf5_exceptions requires the [fortran_exceptions](file://${fortran_exceptions_DOCDIR}/index.html) library and [HDF5](https://support.hdfgroup.org/HDF5/doc/fortran/index.html). HDF5 must be compiled with the Fortran interface.

The simplest way to build the hdf5_exceptions library is using the superbuild, which downloads and compiles the fortran_exceptions library before compiling hdf5_exceptions itself. It is invoked using CMake as follows:

```bash
mkdir build
cd build
cmake ../superbuild
make
make install
```

## Usage

HDF5_exceptions provides an [[hdf5_exception]] type representing a generic HDF5 error. An [[hdf5_exception]] is normally created by calling the [[new_hdf5_exception]] function with an HDF5 error code as an argument. This is the integer argument `hdferr` which passed to most HDF5 procedures. `hdferr` is populated with a negative value on error and zero on success. The error message is set to 'HDF5 exception' by default; this can be overridden with the `message` argument of [[new_hdf5_exception]]. If the `filename` argument is passed to [[new_hdf5_exception]], it will be added to the error message. For instance, `new_hdf5_exception(-1,'HDF5 error reading data',filename='data.h5')` will produce the message

```
HDF5 error reading data on file data.h5
```

Once created, an [[hdf5_exception]] can be thrown in much the same way as the generic exceptions defined in [fortran_exceptions](file://${fortran_exceptions_DOCDIR}/index.html). For example:

```fortran
subroutine open_hdf5_file(status)

  use hdf5
  use hdf5_exceptions
  use fortran_exceptions, ONLY: throw

  class(error_status,intent(out), allocatable, optional :: status

  integer::hdferr
  integer(HID_T)::h5file_h

  ! Initialize HDF5
  call h5open_f(hdferr)

  if (hdferr < 0) then
    ! An error occurred, throw an exception
    call throw(status, new_hdf5_exception( &
               hdferr, &
               'Error initializing HDF5', &
               procedure='open_hdf5_file'))
    return
  end if

  ! Open file
  call h5fopen_f('data.h5',H5F_ACC_RDONLY_F,h5file_h,hdferr)

  if (hdferr < 0) then
    ! An error occurred, throw an exception
    call throw(status, new_hdf5_exception( &
               ierr, &
               'Error opening HDF5 file', &
	       filename='data.h5',
               procedure='open_hdf5_file'))
    return
  end if

end subroutine init_hdf5
```
